{
    "version": "https://jsonfeed.org/version/1",
    "title": "𝕺𝖚𝖗 𝕷𝖎𝖋𝖊 • All posts by \"安卓\" tag",
    "description": "记录生活 | 为众人抱薪者,不可使其扼于风雪",
    "home_page_url": "https://pangbai.work",
    "items": [
        {
            "id": "https://pangbai.work/IT/smali/",
            "url": "https://pangbai.work/IT/smali/",
            "title": "Smali踩坑纪录",
            "date_published": "2021-01-16T05:39:19.000Z",
            "content_html": "<p>有关于安卓逆向的一篇日记，如何二改＆破解软件？来看看这篇很勉强的技术博客吧。</p>\n<span id=\"more\"></span>\n<p>关于安卓逆向，大部分的作用都是用于破解软件 (一些付费的软件)，另外的就是二改软件 (软件汉化，反人类的操作修改)，当然这里面或多或少是涉及到软件提供商的利益问题的，一切利弊由修改者衡量。<br />\n这篇文章本人的入坑笔记，因为是小白，一些见解可能不太正确，如果你也有一点见解，可以在本页评论交流。</p>\n<p>注：可能需要一些安卓开发基础知识，可以自行百度<br />\n <code>本文由@PangBai原创，转载请注明原地址</code></p>\n<h2 id=\"安卓安卓包\"><a class=\"anchor\" href=\"#安卓安卓包\">#</a> 安卓安卓包</h2>\n<h3 id=\"目录结构\"><a class=\"anchor\" href=\"#目录结构\">#</a> 目录结构</h3>\n<p>关于安卓安装包，大部分是以 <code>.apk</code>  为后缀，当然，也有.apks 和.abb, 解压后查看目录大致也相差不大。</p>\n<p>apk 文件中有许多已编译的文件 (字节码形式)，这些我们自然看不懂<br />\n如 AndroidManifest.xml，classes.dex，resources.arsc<br />\n 既然看不懂，我们就得找翻译吧，使用工具<strong> Apktool</strong> 进行反编译，手机上请用<strong> Apktool_M</strong> （你一定要用 MT 我也没办法）</p>\n<p>以下为反编译后目录内容 (也许会出现其他文件夹，但大多与逆向不会有太大关系)</p>\n<ul>\n<li>assets</li>\n<li>lib</li>\n<li>smali</li>\n<li>res</li>\n<li>layout</li>\n<li>color</li>\n<li>anim</li>\n<li>drawable</li>\n<li>raw</li>\n<li>xml</li>\n</ul>\n<p><code>assets</code>  是一个储存大型资源的目录，可能占 apk 绝大多的字节大小， <code>储存其中的资源不会被编译，可以直接修改</code> ，软件运行时会以压缩文件形式解压出来使用。(根据我的经验，html 形式文件可以通过 ur 定位直接访问而其他形式的文件必须需要解压)</p>\n<p><code>lib</code>  存放已编译的库文件，十分重要，进行逆向时直接忽视它。</p>\n<p><code>smali</code>  存放反编译出的 smali 文件 (来自 classes.dex 文件)，是我们进行逆向的主角</p>\n<p><code>res</code>  存放资源文件，如布局，配色，样式，图片，大多为 xml 和 png 形式。<br />\n其中 <code>raw</code>  文件夹十分特别，该文件夹下不会被编译 (同 assets 相似，但它还会额外为文件分配一个 id)，可以存放任何形式文件。</p>\n<h2 id=\"smali\"><a class=\"anchor\" href=\"#smali\">#</a> Smali</h2>\n<p>smali 是一种类似于汇编语言的语法，可以打包为 dex 文件运行在 Dalvik 里（Android 虚拟机） 。</p>\n<h3 id=\"smali文件\"><a class=\"anchor\" href=\"#smali文件\">#</a> Smali 文件</h3>\n<p>我们在 smali 文件夹里能看到许多 smali 文件，它们的是按一定规则进行命名的。</p>\n<p>每一个 smali 文件都对应对应一个 java 类，如果有一个<strong> activity.java</strong>，那么编译后就有<strong> activity.smali</strong>。我们也许还可以看到另外的<strong> activity$InnerClass.smali</strong> 这样的文件，这说明<strong> activity.java</strong> 里面还有一个叫<strong> InnerClass</strong> 的内部类。如果出现<strong> activity$a.smali</strong> 或<strong> activity$b.smali</strong> 这种无意义的内部类名称，那就可能是个匿名内部类。</p>\n<h3 id=\"smali语法\"><a class=\"anchor\" href=\"#smali语法\">#</a> Smali 语法</h3>\n<h3 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h3>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> B---byte</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> C---char</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> D---double</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> F---float</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> I---int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> J---long</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> S---short</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> V---void</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\" /><label for=\"cbx_8\"> Z---boolean</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\" /><label for=\"cbx_9\"> [xxx---array</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\" /><label for=\"cbx_10\"> Lxxx/yyy---object</label></li>\n</ul>\n<p>每种基本数据类型对应一个字母<br />\n<strong> [+ 数据类型</strong>表示一个数组，如 [D 表示一个 double 类型数组。<br />\n<strong>L + 类路径</strong>表示一个对象，如 String 类型数据使用的是<strong> Ljava/lang/String</strong></p>\n<h3 id=\"类\"><a class=\"anchor\" href=\"#类\">#</a> 类</h3>\n<figure class=\"highlight smali\"><figcaption data-lang=\"smali\"><span>i</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">.class</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\"><span class=\"token builtin\">L</span><span class=\"token class-name\">Car</span></span><span class=\"token punctuation\">;</span> //<span class=\"token keyword\">abstract</span> 表明为抽象类</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">.super</span> <span class=\"token class-name\"><span class=\"token builtin\">L</span><span class=\"token namespace\">java<span class=\"token punctuation\">/</span>lang<span class=\"token punctuation\">/</span></span><span class=\"token class-name\">Object</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">.source</span> <span class=\"token string\">\"Car.java\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">.implements</span> <span class=\"token class-name\"><span class=\"token builtin\">L</span><span class=\"token class-name\">IFly</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>.class</strong> 声明一个类并添加修饰<br />\n<strong>.super</strong> 声明继承的父类<br />\n<strong>.source</strong> 声明类来源的文件<br />\n<strong>.implements</strong> 声明类实现的接口</p>\n",
            "tags": [
                "安卓"
            ]
        }
    ]
}